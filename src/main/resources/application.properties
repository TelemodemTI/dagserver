server.port=8081
management.server.port=8082
management.endpoints.web.exposure.include=info,health,monitoring
spring.main.allow-circular-references=true
server.servlet.context-path=/
logging.level.root=INFO

# Scheduler metadata
param.name=scheduler1
param.host=127.0.0.1
param.junit.local=false

# JWT Params
param.jwt_secret=secret
param.jwt_signer=dagserver
param.jwt_subject=access_token
param.jwt_ttl=3360000

# APP Params
#param.folderpath=C:\\tmp\\dagrags\\
#param.folderpath=/root/dags/
#param.storage.exception=/root/dags/exceptions.db
#param.storage.exception=C:\\tmp\\dagrags\\exceptions.db
#param.xcompath=/root/dags/xcom.db
#param.xcompath=C:\\tmp\\dagrags\\xcom_files\\xcom.db


param.logs.rollup.hours=-12
param.git_hub.propkey=GITHUB_WEBHOOK_PROPS
param.rabbit.refresh.timeout=30000
param.rabbit.propkey=RABBIT_PROPS
param.redis.propkey=REDIS_PROPS
param.kafka.propkey=KAFKA_PROPS
param.activemq.propkey=ACTIVEMQ_PROPS
param.redis.refresh.timeout=30000
param.kafka.refresh.timeout=1000
param.activemq.refresh.timeout=30000
mail.smtp.starttls.enable=false
spring.flyway.enabled=true
spring.graphql.graphiql.enabled=true
spring.datasource.driver-class-name=${APP_JDBC_DRIVER:org.h2.Driver}
spring.datasource.url=${APP_JDBC_URL:jdbc:h2:mem:AZ;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=LEGACY}
spring.datasource.username=${APP_JDBC_USER:sa}
spring.datasource.password=${APP_JDBC_PASSWORD:}
spring.jpa.properties.hibernate.dialect=${APP_HIBERNATE_DIALECT:org.hibernate.dialect.H2Dialect}
spring.flyway.locations=${APP_MIGRATION_JDBC_TYPE:classpath:/db/migration/h2}
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB
spring.allowed.file.extensions=jar,txt,xls,xlsx,csv,log,out,sql

#keycloak properties
#param.keycloak.host=http://localhost:8080/
#param.keycloak.realm=master
#param.keycloak.client_id=dagserver
#param.keycloak.client_secret=Xx7ks1aFYgKrcjfKb7KWy36lN1AzLpy7

#########filesystem profiles
#filesystem-normal: files generated when compiling DAGs are managed in an operating system path
#filesystem-memory: files are generated in memory jimfs filesystem
#########storage profiles
#storage-hashmap: xcom and exceptions is save in memory hashmap
#storage-map-db: xcom and exceptions is saved in a mapDB file
#########profiles de autenticacion
#auth-internal: internal authentication
#auth-keycloak: SSO via keycloak

spring.profiles.active=storage-hashmap,auth-internal,filesystem-memory
